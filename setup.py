from setuptools import setup, find_packages

with open("README.md", "r") as f:
    description = f.read()

setup(
    name='data-structures-py-jordankbm',
    version='0.1.0',
    description='Implementation of various data structures in Python from scratch',
    author='Jordan Kevin Buwa Mbouobda',
    author_email='jmbouobda@aimsammi.org',
    license='MIT',
    packages=find_packages(),
    install_requires=[
        'numpy==2.2.4',
        'networkx==3.4.2',
        'matplotlib==3.10.1',
    ],
    entry_points={
        'data_structures': [
            'array_class = data_structures.array:Array_new',
            'linked_list_class = data_structures.linked_lists:LinkedList',
            'stack_class = data_structures.stack:Stack',
            'queue_class = data_structures.queue:Queue',
            'binary_tree_class = data_structures.tree:BinaryTree',
            'node_class = data_structures.tree:Node',
        ],
        'data_structures.array_class': [
            'description = Custom array implementation with numpy backend',
            '__init__',
            '__str__',
            '__getitem__',
            '__len__',
            'reshape',
            'max',
            'min',
            'sum',
            'show',
            'pop',
            'insert',
            'append',
            'mean',
            'std',
        ],
        'data_structures.linked_list_class': [
            'description = Linked list implementation with single/double link support',
            '__init__',
            'InsertAtBeg',
            'InsertAtPos',
            'InsertAtEnd',
            'deleteItem',
            'get_length',
            'access',
            '__getitem__',
            'search',
            'reverse_list',
            'update',
            'IsEmpty',
            'last_node',
            'display',
            'supports_doubly_linked = true',
        ],
        'data_structures.stack_class': [
            'description = Stack implementation that works with Array_new or LinkedList',
            '__init__',
            'push',
            'peek',
            'pop',
            'isEmpty',
            'size',
            'display_stack',
        ],
        'data_structures.queue_class': [
            'description = Queue implementation using LinkedList',
            '__init__',
            'enqueue',
            'isNull',
            'dequeue',
            'rear',
            'peek',
            'isFull',
            'display_queue',
            'max_size = 20',
        ],
        'data_structures.binary_tree_class': [
            'description = Binary tree implementation',
            '__init__',
            '__str__',
            'pre_order',
            'in_order',
            'post_order',
            'search_node',
            'search_BST',
            'addnode',
            'draw_graph',
            'base_class = Node',
        ],
        'data_structures.node_class': [
            'description = Node class for tree and linked list structures',
            '__init__',
            'build_graph',
            'draw_graph',
        ],
        'data_structures.visualization': [
            'graph_library = networkx',
            'plotting_library = matplotlib',
        ],
        'data_structures.testing': [
            'test_cases = Array operations',
            'test_cases = Linked list operations',
            'test_cases = Stack operations',
            'test_cases = Queue operations',
            'test_cases = Tree traversals',
        ],
    },
    long_description = description,
    long_description_content_type= 'text/markdown',
)